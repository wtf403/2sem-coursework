# Generated by Django 4.0.5 on 2022-06-24 22:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('director', '0002_initial'),
        ('video', '0002_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('actor', '0002_initial'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='Почта')),
                ('photo', models.ImageField(blank=True, upload_to='users/photos', verbose_name='Аватарка')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активирован')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Администратор')),
                ('actor', models.ManyToManyField(blank=True, related_name='user', to='actor.actor', verbose_name='Любимые актёры')),
                ('director', models.ManyToManyField(blank=True, related_name='user', to='director.director', verbose_name='Любимые режисёры')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('video', models.ManyToManyField(blank=True, related_name='user', to='video.video', verbose_name='Любимые видео')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
